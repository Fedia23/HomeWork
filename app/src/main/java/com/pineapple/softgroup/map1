package com.pineapple.softgroup.fragments;

import android.Manifest;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.Point;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.net.Uri;
import android.os.Bundle;
import android.os.Looper;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v7.app.AlertDialog;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.AbsoluteLayout;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.Projection;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.pineapple.softgroup.DB.DBHelperMap;
import com.pineapple.softgroup.MainActivity;
import android.os.Handler;
import com.pineapple.softgroup.R;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.Locale;
import java.util.logging.LogRecord;
import java.util.zip.Inflater;

import static android.view.FrameMetrics.ANIMATION_DURATION;

public class FragmentMap extends Fragment implements OnMapReadyCallback,
        GoogleMap.OnMarkerClickListener {

    final String TAG = "Map";
    private SupportMapFragment mapFragment;
    private GoogleMap map;
    private Marker marker;
    private DBHelperMap dbHelperMap;
    public String name = "marker";
    public List<com.pineapple.softgroup.DB.model.Marker> markersList;
        private Button delete;
    private LatLng latLng;


    public static FragmentMap newInstance() {
        FragmentMap fragment = new FragmentMap();
        return fragment;
    }
    @Override
    public View onCreateView(final LayoutInflater inflater, final ViewGroup container,
                             final Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.fragment_map, null);

        dbHelperMap = new DBHelperMap(getActivity());

        delete = (Button)v.findViewById(R.id.deleteMarker);
        mapFragment = (SupportMapFragment) this.getChildFragmentManager().findFragmentById(R.id.lmapFragment);

        mapFragment.getMapAsync(this);


        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                {
                    markersList = dbHelperMap.getAllMarkers();
                    LatLng ltng = getLatLng();
                    if (latLng == null) {
                        Toast.makeText(getActivity(), "Виберіть маркер", Toast.LENGTH_LONG).show();
                    } else {
                        for (com.pineapple.softgroup.DB.model.Marker mark : markersList) {
                            if ((mark.getLatitude() == (ltng.latitude)) && (mark.getLongitude() == (ltng.longitude))) {
                                dbHelperMap.deleteMarker(mark);
                                Toast.makeText(getActivity(), "delete", Toast.LENGTH_LONG).show();
                                init();
                            }
                        }
                    }
                }
            }
        });

        return v;
    }
    public LatLng getLatLng() {
        return latLng;
    }

    public void setLatLnd(LatLng latLnd) {
        this.latLng = latLnd;
    }

    @Override
    public boolean onMarkerClick(final Marker marker) {
        System.out.println("DDDDDDDDDDDsSSSSSSSSSSSSSSSSS");
        setLatLnd(marker.getPosition());
//      delete.setOnClickListener(new View.OnClickListener() {
//          @Override
//          public void onClick(View v) {
//              markersList = dbHelperMap.getAllMarkers();
//              System.out.println("SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS");
//              for (com.pineapple.softgroup.DB.model.Marker mark: markersList) {
//                   if ((mark.getLatitude() == (marker.getPosition().latitude)) && (mark.getLongitude() == (marker.getPosition().longitude))) {
//                       dbHelperMap.deleteMarker(mark);
//                       Toast.makeText(getActivity(), "delete", Toast.LENGTH_LONG).show();
//                   }
//               }
//          }
//      });
        return true;
    }

    @Override
    public void onMapReady(GoogleMap googleMap) {
       map = googleMap;

        setUpMap();

        init();

        onClickTest();
    }

    public void setUpMap(){
        map.setMapType(GoogleMap.MAP_TYPE_HYBRID);
       if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) { return; }
        map.setMyLocationEnabled(true);
        map.setTrafficEnabled(true);
        map.setIndoorEnabled(true);
        map.setBuildingsEnabled(true);
        map.getUiSettings().setZoomControlsEnabled(true);
        map.getCameraPosition();
        map.setMinZoomPreference(12);
    }

    public void onClickTest() {
        dbHelperMap = new DBHelperMap(getActivity());
        //Ввести title маркера
        map.setOnMapClickListener(new GoogleMap.OnMapClickListener() {

            @Override
            public void onMapClick(LatLng latLng) {
                AlertDialog.Builder alertDialog = new AlertDialog.Builder(getActivity());
                LinearLayout layout = new LinearLayout(mapFragment.getActivity());
                layout.setOrientation(LinearLayout.VERTICAL);

                final EditText inputName = new EditText(mapFragment.getActivity());
                inputName.setHint("Enter name");
                layout.addView(inputName);
                alertDialog.setView(layout);

                alertDialog.setPositiveButton("SAVE", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        name = inputName.getText().toString();
                    }
                });
                alertDialog.show();
                //Додати дані маркеру в БД
                dbHelperMap.addMarker(new com.pineapple.softgroup.DB.model.Marker(name, latLng.latitude, latLng.longitude));

                init();
            }
        });
        //Видалити маркер
//        map.setOnMapLongClickListener(new GoogleMap.OnMapLongClickListener() {
//            @Override
//            public void onMapLongClick(LatLng latLng) {
//                markersList = dbHelperMap.getAllMarkers();
//               for (com.pineapple.softgroup.DB.model.Marker mark: markersList){
//                  if ((mark.getLatitude() == (latLng.latitude))&&(mark.getLongitude() == (latLng.longitude))){
//                    dbHelperMap.deleteMarker(mark);
//                      Toast.makeText(getActivity(), "delete", Toast.LENGTH_LONG).show();
//                  }
//               }
//            }
//        });
//
    }
//
        //Моє місцезнаходження місцезнаходження

    public void getLocation() {
        map.setOnMyLocationChangeListener(new GoogleMap.OnMyLocationChangeListener() {
            @Override
            public void onMyLocationChange(Location location) {
                map.addMarker(new MarkerOptions()
                        .position(new LatLng(location.getLatitude(), location.getLongitude()))
                        .title("Ви знаходетеся в " + getState(location.getLatitude(), location.getLongitude())));
                map.animateCamera(CameraUpdateFactory.newLatLng(new LatLng(location.getLatitude(), location.getLongitude())));
            }
        });
    }


//
//    //Отримати назву місцезнаходження
    public String getState(double lat, double lng) {
        Geocoder geocoder = new Geocoder(getActivity(), Locale.getDefault());
        try {
            List<Address> addresses = geocoder.getFromLocation(lat, lng, 1);
            Address obj = addresses.get(0);
            return obj.getAddressLine(1);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
//
//    //Добавити маркер з БД
    private void init(){
        dbHelperMap = new DBHelperMap(getActivity());
        markersList = dbHelperMap.getAllMarkers();
        for (com.pineapple.softgroup.DB.model.Marker mark : markersList) {
            map.addMarker(new MarkerOptions()
                    .position(new LatLng(mark.getLatitude(), mark.getLongitude()))
                    .title(mark.getName()));
        }
//        map.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter() {
//            @Override
//            public View getInfoWindow(final Marker marker) {
//                                View v = getActivity().getLayoutInflater().inflate(R.layout.window_info_map, null);
//                TextView text = (TextView)v.findViewById(R.id.titleMarker);
//                Button del = (Button)v.findViewById(R.id.imgDelMarker);
//                text.setText(dbHelperMap.getMarker(marker.getPosition().latitude, marker.getPosition().longitude).getName());
//
//                del.setOnClickListener(new View.OnClickListener() {
//                    @Override
//                    public void onClick(View v) {
//                        System.out.println("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
//                        for (com.pineapple.softgroup.DB.model.Marker mark : markersList) {
//                            if (mark.getLatitude() == marker.getPosition().latitude && mark.getLongitude() == marker.getPosition().longitude) {
//                               System.out.println("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
//                                dbHelperMap.deleteMarker(mark);
//                                Toast.makeText(getActivity(), "delete", Toast.LENGTH_LONG).show();
//                            }
//                        }
//                    }
//                });
//                return v;
//            }
//
//            @Override
//            public View getInfoContents(final Marker marker) {
//                LinearLayout layout = new LinearLayout(mapFragment.getActivity());
//                Button btn = new Button(mapFragment.getActivity());
//                layout.addView(btn);
//                btn.setOnClickListener(new View.OnClickListener() {
//                    @Override
//                    public void onClick(View v) {
//                        System.out.println("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
//                        for (com.pineapple.softgroup.DB.model.Marker mark : markersList) {
//                           if (mark.getLatitude() == marker.getPosition().latitude && mark.getLongitude() == marker.getPosition().longitude) {
//                              System.out.println("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
//                               dbHelperMap.deleteMarker(mark);
//                                Toast.makeText(getActivity(), "delete", Toast.LENGTH_LONG).show();
//                         }
//                      }
//                    }
//                });
//
//                return layout;
//            }
//
//        });
    }
}
